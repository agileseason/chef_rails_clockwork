#!/bin/bash
### BEGIN INIT INFO
# Provides:          <%=@app_name %>
# Required-Start:    $all
# Required-Stop:     $network $local_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start the <%=@app_name %> clockwork at boot
# Description:       Enable <%=@app_name %> at boot time.
### END INIT INFO

APP_NAME=<%=@app_name %>
APP_USER=<%=@app_user %>
APP_ENV=<%=@app_env %>
APP_ROOT=<%=@app_root %>
APP_SHARED=<%=@app_shared %>

LOG_DIR="$APP_SHARED/log/"
PID_DIR="$APP_SHARED/tmp/pids/"
PID_FILE="${PID_DIR}clockworkd.${APP_NAME}.pid"

EXECUTABLE="clockworkd"
EXECUTABLE_OPTS="--clock=$APP_ROOT/config/clock.rb --identifier=$APP_NAME --pid-dir=$PID_DIR --log --log-dir=$LOG_DIR"

RBENV_ROOT="/home/$APP_USER/.rbenv"
PATH="$RBENV_ROOT/bin:$RBENV_ROOT/shims:$PATH"

CMD="RAILS_ENV=$APP_ENV bundle exec $EXECUTABLE $EXECUTABLE_OPTS"

RETVAL=0

if [ -d $APP_ROOT ]
then
  cd $APP_ROOT
else
  if [ "$1" = 'stop' ]
  then
    exit 0
  else
    exit 1
  fi
fi

start() {
  [ `id -u` == '0' ] || (echo "$EXECUTABLE runs as root only .."; exit 5)
  [ -d $APP_ROOT ] || (echo "$APP_ROOT not found!.. Exiting"; exit 6)
  cd $APP_ROOT
  echo "Starting $EXECUTABLE tasks scheduler .. "

  sudo -u $APP_USER -H zsh -l -c "RAILS_ENV=$APP_ENV $CMD start"

  RETVAL=$?
  return $RETVAL
}

stop() {
  echo "Stopping $EXECUTABLE tasks scheduler .."
  sudo -u $APP_USER -H zsh -l -c "RAILS_ENV=$APP_ENV $CMD stop"
  return 0
}

sig () {
  test -s "$PID_FILE" && kill -$1 `cat $PID_FILE`
}

if !(test -s "$PID_FILE" && ps -p `cat $PID_FILE` > /dev/null); then
  rm -f $PID_FILE
fi

case "$1" in
  start)
    sig 0 && echo >&2 "Already running" && exit 0
    start
    ;;
  stop)
    stop
    ;;
  restart|reload)
    stop
    start
    ;;
  status)
    sig 0 && echo "$EXECUTABLE tasks scheduler is running .." && exit 0

    echo "$EXECUTABLE tasks scheduler is stopped .."
    RETVAL=1
    ;;
  *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 0
    ;;
esac
exit $RETVAL
